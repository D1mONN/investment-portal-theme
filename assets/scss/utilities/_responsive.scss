// FILE: assets/scss/utilities/_responsive.scss

/**
 * Responsive Utilities
 * 
 * This file provides a comprehensive set of responsive utility classes
 * that enable adaptive layouts and responsive design patterns throughout
 * the theme. All utilities follow a mobile-first approach.
 */

// -----------------------------------------------------------------------------
// Responsive Display Utilities
// -----------------------------------------------------------------------------

// Hide on specific breakpoints and up
@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    .hide-#{$breakpoint}-up {
      display: none !important;
    }
  }
}

// Hide on specific breakpoints and down
@each $breakpoint in xs, sm, md, lg, xl {
  @include media-down($breakpoint) {
    .hide-#{$breakpoint}-down {
      display: none !important;
    }
  }
}

// Show only on specific breakpoint
@each $breakpoint in xs, sm, md, lg, xl {
  .show-only-#{$breakpoint} {
    display: none !important;
    
    @if $breakpoint == xs {
      @include media-down(sm) {
        display: block !important;
      }
    } @else if $breakpoint == sm {
      @include media-up(sm) {
        @include media-down(md) {
          display: block !important;
        }
      }
    } @else if $breakpoint == md {
      @include media-up(md) {
        @include media-down(lg) {
          display: block !important;
        }
      }
    } @else if $breakpoint == lg {
      @include media-up(lg) {
        @include media-down(xl) {
          display: block !important;
        }
      }
    } @else if $breakpoint == xl {
      @include media-up(xl) {
        display: block !important;
      }
    }
  }
}

// -----------------------------------------------------------------------------
// Responsive Spacing Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    // Margin
    @each $side, $property in (
      '': '',
      't': '-top',
      'r': '-right',
      'b': '-bottom',
      'l': '-left',
      'x': '-left',
      'y': '-top'
    ) {
      @each $size, $value in (
        '0': 0,
        '1': $spacing-1,
        '2': $spacing-2,
        '3': $spacing-3,
        '4': $spacing-4,
        '5': $spacing-5,
        '6': $spacing-6,
        '8': $spacing-8,
        '10': $spacing-10,
        '12': $spacing-12,
        'auto': auto
      ) {
        @if $side == 'x' {
          .m#{$side}-#{$breakpoint}-#{$size} {
            margin-left: $value !important;
            margin-right: $value !important;
          }
        } @else if $side == 'y' {
          .m#{$side}-#{$breakpoint}-#{$size} {
            margin-top: $value !important;
            margin-bottom: $value !important;
          }
        } @else {
          .m#{$side}-#{$breakpoint}-#{$size} {
            margin#{$property}: $value !important;
          }
        }
      }
    }
    
    // Padding
    @each $side, $property in (
      '': '',
      't': '-top',
      'r': '-right',
      'b': '-bottom',
      'l': '-left',
      'x': '-left',
      'y': '-top'
    ) {
      @each $size, $value in (
        '0': 0,
        '1': $spacing-1,
        '2': $spacing-2,
        '3': $spacing-3,
        '4': $spacing-4,
        '5': $spacing-5,
        '6': $spacing-6,
        '8': $spacing-8,
        '10': $spacing-10,
        '12': $spacing-12
      ) {
        @if $side == 'x' {
          .p#{$side}-#{$breakpoint}-#{$size} {
            padding-left: $value !important;
            padding-right: $value !important;
          }
        } @else if $side == 'y' {
          .p#{$side}-#{$breakpoint}-#{$size} {
            padding-top: $value !important;
            padding-bottom: $value !important;
          }
        } @else {
          .p#{$side}-#{$breakpoint}-#{$size} {
            padding#{$property}: $value !important;
          }
        }
      }
    }
  }
}

// -----------------------------------------------------------------------------
// Responsive Flexbox Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    // Flex direction
    .flex-#{$breakpoint}-row { flex-direction: row !important; }
    .flex-#{$breakpoint}-column { flex-direction: column !important; }
    .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
    .flex-#{$breakpoint}-column-reverse { flex-direction: column-reverse !important; }
    
    // Flex wrap
    .flex-#{$breakpoint}-wrap { flex-wrap: wrap !important; }
    .flex-#{$breakpoint}-nowrap { flex-wrap: nowrap !important; }
    .flex-#{$breakpoint}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    
    // Justify content
    .justify-content-#{$breakpoint}-start { justify-content: flex-start !important; }
    .justify-content-#{$breakpoint}-end { justify-content: flex-end !important; }
    .justify-content-#{$breakpoint}-center { justify-content: center !important; }
    .justify-content-#{$breakpoint}-between { justify-content: space-between !important; }
    .justify-content-#{$breakpoint}-around { justify-content: space-around !important; }
    .justify-content-#{$breakpoint}-evenly { justify-content: space-evenly !important; }
    
    // Align items
    .align-items-#{$breakpoint}-start { align-items: flex-start !important; }
    .align-items-#{$breakpoint}-end { align-items: flex-end !important; }
    .align-items-#{$breakpoint}-center { align-items: center !important; }
    .align-items-#{$breakpoint}-baseline { align-items: baseline !important; }
    .align-items-#{$breakpoint}-stretch { align-items: stretch !important; }
    
    // Align self
    .align-self-#{$breakpoint}-auto { align-self: auto !important; }
    .align-self-#{$breakpoint}-start { align-self: flex-start !important; }
    .align-self-#{$breakpoint}-end { align-self: flex-end !important; }
    .align-self-#{$breakpoint}-center { align-self: center !important; }
    .align-self-#{$breakpoint}-baseline { align-self: baseline !important; }
    .align-self-#{$breakpoint}-stretch { align-self: stretch !important; }
    
    // Gap
    @each $size, $value in (
      '0': 0,
      '1': $spacing-1,
      '2': $spacing-2,
      '3': $spacing-3,
      '4': $spacing-4,
      '5': $spacing-5,
      '6': $spacing-6,
      '8': $spacing-8
    ) {
      .gap-#{$breakpoint}-#{$size} { gap: $value !important; }
    }
  }
}

// -----------------------------------------------------------------------------
// Responsive Sizing Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    // Width
    .w-#{$breakpoint}-25 { width: 25% !important; }
    .w-#{$breakpoint}-50 { width: 50% !important; }
    .w-#{$breakpoint}-75 { width: 75% !important; }
    .w-#{$breakpoint}-100 { width: 100% !important; }
    .w-#{$breakpoint}-auto { width: auto !important; }
    
    // Max width
    .mw-#{$breakpoint}-100 { max-width: 100% !important; }
    
    // Height
    .h-#{$breakpoint}-25 { height: 25% !important; }
    .h-#{$breakpoint}-50 { height: 50% !important; }
    .h-#{$breakpoint}-75 { height: 75% !important; }
    .h-#{$breakpoint}-100 { height: 100% !important; }
    .h-#{$breakpoint}-auto { height: auto !important; }
    
    // Max height
    .mh-#{$breakpoint}-100 { max-height: 100% !important; }
  }
}

// -----------------------------------------------------------------------------
// Responsive Text Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    // Text alignment
    .text-#{$breakpoint}-left { text-align: left !important; }
    .text-#{$breakpoint}-right { text-align: right !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-justify { text-align: justify !important; }
    
    // Font size
    .fs-#{$breakpoint}-1 { font-size: $font-size-5xl !important; }
    .fs-#{$breakpoint}-2 { font-size: $font-size-4xl !important; }
    .fs-#{$breakpoint}-3 { font-size: $font-size-3xl !important; }
    .fs-#{$breakpoint}-4 { font-size: $font-size-2xl !important; }
    .fs-#{$breakpoint}-5 { font-size: $font-size-xl !important; }
    .fs-#{$breakpoint}-6 { font-size: $font-size-lg !important; }
  }
}

// -----------------------------------------------------------------------------
// Responsive Border Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    .border-#{$breakpoint} { border: $border-width solid $border-color !important; }
    .border-#{$breakpoint}-0 { border: 0 !important; }
    .border-#{$breakpoint}-top { border-top: $border-width solid $border-color !important; }
    .border-#{$breakpoint}-right { border-right: $border-width solid $border-color !important; }
    .border-#{$breakpoint}-bottom { border-bottom: $border-width solid $border-color !important; }
    .border-#{$breakpoint}-left { border-left: $border-width solid $border-color !important; }
    
    // Border radius
    .rounded-#{$breakpoint} { border-radius: $border-radius !important; }
    .rounded-#{$breakpoint}-0 { border-radius: 0 !important; }
    .rounded-#{$breakpoint}-circle { border-radius: $border-radius-full !important; }
  }
}

// -----------------------------------------------------------------------------
// Responsive Position Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    .position-#{$breakpoint}-static { position: static !important; }
    .position-#{$breakpoint}-relative { position: relative !important; }
    .position-#{$breakpoint}-absolute { position: absolute !important; }
    .position-#{$breakpoint}-fixed { position: fixed !important; }
    .position-#{$breakpoint}-sticky { position: sticky !important; }
  }
}

// -----------------------------------------------------------------------------
// Responsive Float Utilities
// -----------------------------------------------------------------------------

@each $breakpoint in sm, md, lg, xl {
  @include media-up($breakpoint) {
    .float-#{$breakpoint}-left { float: left !important; }
    .float-#{$breakpoint}-right { float: right !important; }
    .float-#{$breakpoint}-none { float: none !important; }
  }
}

// -----------------------------------------------------------------------------
// Container Queries (Future CSS)
// -----------------------------------------------------------------------------

// Prepare for container queries when browser support improves
@supports (container-type: inline-size) {
  .container-query {
    container-type: inline-size;
  }
  
  @container (min-width: 400px) {
    .cq\:text-lg {
      font-size: $font-size-lg;
    }
  }
  
  @container (min-width: 600px) {
    .cq\:grid-cols-2 {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}

// -----------------------------------------------------------------------------
// Responsive Aspect Ratios
// -----------------------------------------------------------------------------

.aspect-ratio-16-9 {
  @include aspect-ratio(16, 9);
}

.aspect-ratio-4-3 {
  @include aspect-ratio(4, 3);
}

.aspect-ratio-1-1 {
  @include aspect-ratio(1, 1);
}

.aspect-ratio-21-9 {
  @include aspect-ratio(21, 9);
}

// -----------------------------------------------------------------------------
// Mobile-Specific Utilities
// -----------------------------------------------------------------------------

// Touch-friendly spacing
@include media-down(md) {
  .touch-target {
    min-height: 44px;
    min-width: 44px;
  }
  
  .mobile-full-width {
    width: 100vw;
    margin-left: -$container-padding-x-sm;
    margin-right: -$container-padding-x-sm;
  }
  
  .mobile-no-radius {
    border-radius: 0 !important;
  }
}

// -----------------------------------------------------------------------------
// Orientation Utilities
// -----------------------------------------------------------------------------

@media (orientation: portrait) {
  .show-portrait { display: block !important; }
  .hide-portrait { display: none !important; }
}

@media (orientation: landscape) {
  .show-landscape { display: block !important; }
  .hide-landscape { display: none !important; }
}

// -----------------------------------------------------------------------------
// High Resolution Display Utilities
// -----------------------------------------------------------------------------

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .retina-only {
    display: block !important;
  }
  
  .non-retina {
    display: none !important;
  }
}

// -----------------------------------------------------------------------------
// Hover State Utilities (for non-touch devices)
// -----------------------------------------------------------------------------

@media (hover: hover) and (pointer: fine) {
  .hover-visible {
    opacity: 0;
    transition: opacity $transition-fast;
  }
  
  *:hover > .hover-visible {
    opacity: 1;
  }
  
  .hover-scale:hover {
    transform: scale(1.05);
  }
  
  .hover-shadow:hover {
    box-shadow: $shadow-lg;
  }
}